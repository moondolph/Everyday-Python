'''
대표값
N명의 학생의 수학점수가 주어집니다. N명의 학생들의 평균(소수 첫째자리 반올림)을 구하고,
N명의 학생 중 평균에 가장 가까운 학생은 몇 번째 학생인지 출력하는 프로그램을 작성하세
요.
평균과 가장 가까운 점수가 여러 개일 경우 먼저 점수가 높은 학생의 번호를 답으로 하고, 높
은 점수를 가진 학생이 여러 명일 경우 그 중 학생번호가 빠른 학생의 번호를 답으로 합니다.
▣ 입력설명
첫줄에 자연수 N(5<=N<=100)이 주어지고, 두 번째 줄에는 각 학생의 수학점수인 N개의 자연
수가 주어집니다. 학생의 번호는 앞에서부터 1로 시작해서 N까지이다.
▣ 출력설명
첫줄에 평균과 평균에 가장 가까운 학생의 번호를 출력한다.
평균은 소수 첫째 자리에서 반올림합니다.
▣ 입력예제 1
10
45 73 66 87 92 67 75 79 75 80
▣ 출력예제 1
74 7
예제설명)
평균이 74점으로 평균과 가장 가까운 점수는 73(2번), 75(7번), 75(9번)입니다. 여기서 점수가 높은
75(7번), 75(9번)이 답이 될 수 있고, 75점이 두명이므로 학생번호가 빠른 7번이 답이 됩니다.
'''

N = int(input())    #첫줄에 자연수 N(5<=N<=100)이 주어지고
arr = list(map(int,input().split()))    #두 번째 줄에는 각 학생의 수학점수인 N개의 자연수가 주어집니다.

avg = int(format(sum(arr) / len(arr),".0f"))    #평균은 소수 첫째 자리에서 반올림합니다.
# avg = around(sum(arr)/N)                      #(이렇게 하는게 더 나음)
disMin = float('inf')   #평균과 가장 가까운 거리를 비교해줄 기준 변수 생성

for i in range(len(arr)):       #for index, point in enumerate(arr): --> enumerate을 쓰면 index랑 value 동시에 돌릴 수 있음
    dis=abs(arr[i]-avg)
    if(dis < disMin):   #만약 거리가 이전 거리보다 가까우면
       disMin=dis       #최소 거리 갱신
       maxPoint=arr[i]  #해당 점수를 저장
       num=i+1          #해당 학생의 번호 저장
    elif(dis == disMin):    ##만약 평균과 가장 가까운 점수가 등장했을 경우
        if(maxPoint < arr[i]):            ##그 점수가 더 높으면
           maxPoint = arr[i]              ##그 학생의 점수가 기준이 되어야 하고
           num=i+1                         # 이 학생의 번호가 정답
print(avg,num)

'''예제입력에서 45 73 66 87 92 67 75 79 75 80에서 평균이 74인데 
73 75 75의 경우를 상상'''

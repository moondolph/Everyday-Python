'''
2.보도
좌우로 이어진 N칸의 보도가 있다
보도 블록의 두께가 일정하지 않아 그 높이가 다를 수 있는데
각 칸의 높이는 왼쪽부터 A[1],A[2],..,A[N]로 주어진다.
최초에는 임의의 칸에서 시작하여 오른쪽으로 한 칸 씩 걸어갈 수 있는데,
현재 칸과 바로 오른쪽 칸과 높이의 차이가 K이하인 경우에만 걸어갈 수 있다.
가장 많이 걸어갈 수 있는 칸 수를 제시하라.

예제 입력)
N=5, K=3, Height={1, 6, 3, 2, 9}

예제 결과)
3
'''

#나의 코드
n = int(input("N = "))        #n칸의 보도 입력받기
k = int(input("K = "))        #현재 칸과 오른쪽 칸의 높이 차 k 입력받기
a = list(map(int,input("Height = ").split(",")))    #각 칸의 높이를 리스트에 저장
res=0   #가장 많이 걸어갈 수 있느 칸 수(최대값) 저장하는 그릇
step=1  #반복문의 각 경우에서 걸어갈 수 있는 칸 수 저장하는 그릇
for i in range(n-1):    #a[0]부터 a[n-2]까지만 돌림. 마지막 a[n-1]는 돌릴 필요 없으니까.
    if abs(a[i]-a[i+1])<=k:     #만약 다음 칸과의 높이차이가 k이하이면
        step+=1                 #step(걸어갈 수 있는 칸)이 +1 증가
    else:                       #그게 아니면
        step=1                  #걸어갈 수 있는 칸은 기본 값으로 초기화

    if step>res:                #최대값을 저장해주는 기능
        res=step
print(res)


